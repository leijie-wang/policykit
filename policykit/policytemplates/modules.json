[
    {
        "name": "Notify people who have not voted",
        "description": "Send an ephemeral message to people who have not voted yet according to the specified frequency (in minutes)",
        "codes": "# only if it involves a voting process\nif proposal.vote_post_id:\n\teligible_voters = proposal.data.get(\"eligible_voters\")\n\t# if the procedure defines its eligible voters; \n\t# we also assume we get all votes by the current GovernanceProcess\n\tif eligible_voters:\n\t\tif not proposal.data.get(\"last_time_notify_voters\"):\n\t\t\tproposal.data.set(\"last_time_notify_voters\", 0)\n\t\tif (proposal.get_time_elapsed().total_seconds() - proposal.data.get(\"last_time_notify_voters\")) > variables.notify_voter_frequency * 60:\n\t\t\tproposal.data.set(\"last_time_notify_voters\", proposal.get_time_elapsed().total_seconds())\n\t\t\tvoted_voters = [vote.user.username for vote in proposal.get_active_votes() or []]\n\t\t\tin_channel_users = [user.username for user in slack.get_users_in_channel(channel=variables.vote_channel)]\n\t\t\tfor voter in eligible_voters:\n\t\t\t\tif voter not in in_channel_users:\n\t\t\t\t\tcontinue\n\t\t\t\tif voter not in voted_voters:\n\t\t\t\t\t# if the vote happens in a channel, then we should post an ephemeral message to each user\n\t\t\t\t\tlogger.debug(f\"{voter} have not voted yet\")\n\t\t\t\t\tif variables.vote_channel:\n\t\t\t\t\t\tslack.post_message(\"Please remember that you have not voted yet\", users=[voter], post_type=\"ephemeral\", channel=variables.vote_channel)\n\n\n",
        "variables":[
            {
                "name": "notify_voter_frequency",
                "label": "Notification frequency (in minutes)",
                "entity": null,
                "default": "",
                "is_required": true,
                "prompt": "How often to notify people who have not voted yet (in minutes)",
                "type": "number",
                "is_list": false
            }
        ],
        "data": []
    },
    {
        "name": "Delayed voting checks",
        "description": "Only start to check the status of a procedure after a given time. Afterwards, the procedure will continue being checked until it passes or fails",
        "codes": "if proposal.vote_post_id and variables.duration > 0:\n  time_elapsed = proposal.get_time_elapsed()\n  if time_elapsed < datetime.timedelta(minutes=variables.duration):\n    return None\n\n",
        "variables":[
            {
                "name": "duration",
                "label": "Procedure duration (in minutes)",
                "entity": null,
                "default": "",
                "is_required": true,
                "prompt": "When the vote is closed (in minutes)",
                "type": "number",
                "is_list": false
            }
        ],
        "data": []
    },
    {
        "name": "All eligible voters are required to vote",
        "description": "If the procedure defines its eligible voters, then we will only start counting votes after all of them have voted",
        "codes": "\n# only if it involves a voting process\nif proposal.vote_post_id:\n\teligible_voters = proposal.data.get(\"eligible_voters\")\n\t# if the procedure defines its eligible voters; \n\t# we also assume we get all votes by the current GovernanceProcess\n\tif eligible_voters:\n\t\tvoted_voters = [vote.user.username for vote in proposal.get_active_votes() or []]\n\t\tnot_voted_num = 0\n\t\tlogger.debug(f\"voted voters {voted_voters}\")\n\t\tfor voter in eligible_voters:\n\t\t\tif voter not in voted_voters:\n\t\t\t\tnot_voted_num = not_voted_num + 1\n\t\tif not_voted_num > variables.maximum_not_vote_num:\n\t\t\tlogger.debug(f\"vote pending because at most {variables.maximum_not_vote_num} people are allowed not to vote\")\n\t\t\treturn None\n",
        "variables": [
            {
                "name": "maximum_not_vote_num",
                "label": "Maximum number of people allowed not to vote",
                "entity": null,
                "default": "0",
                "is_required": true,
                "prompt": "How many people are allowed not to vote",
                "type": "number",
                "is_list": false
            }
        ],
        "data": []
    }
]
