[
    {
        "kind": "CommunityUser",
        "name": "Role",
        "description": "Only users of a specified role",
        "prompt": "",
        "platform": "All",
        "codes": "all_usernames_with_roles = [user.username for user in {platform}.get_users(role_names=[role])]\nreturn (object.username if hasattr(object, \"username\") else object) in all_usernames_with_roles",
        "variables":[
            {
                "name": "role",
                "label": "User role",
                "entity": "CommunityRole",
                "default": "",
                "is_required": true,
                "prompt": "",
                "type": "string",
                "is_list": false
            }
        ],
        "data": []
    },
    {
        "kind": "CommunityUser",
        "name": "UserID",
        "description": "Only users with the specified userIDs",
        "prompt": "",
        "platform": "All",
        "codes": "return object.username in user_IDs",
        "variables":[
            {
                "name": "user_IDs",
                "label": "Usernames",
                "entity": "CommunityUser",
                "default": "",
                "is_required": true,
                "prompt": "",
                "type": "string",
                "is_list": true
            }
        ],
        "data": []
    },
    {
        "kind": "Text",
        "name": "Startswith",
        "description": "Only texts that start with the specified word",
        "prompt": "",
        "platform": "All",
        "codes": "return object.startswith(word)",
        "variables":[
            {
                "name": "word",
                "label": "Starting word",
                "entity": "Text",
                "default": "",
                "is_required": true,
                "prompt": "",
                "type": "string",
                "is_list": false
            }
        ],
        "data": []
    },
    {
        "kind": "Text",
        "name": "Equals",
        "description": "Only texts that equal the specified text",
        "prompt": "",
        "platform": "All",
        "codes": "return object == text",
        "variables":[
            {
                "name": "text",
                "label": "Expected text",
                "entity": "Text",
                "default": "",
                "is_required": true,
                "prompt": "",
                "type": "string",
                "is_list": false
            }
        ],
        "data": []
    },
    {
        "kind": "Text",
        "name": "LengthGreaterThan",
        "description": "Only texts that have the length greater than the specified length",
        "prompt": "",
        "platform": "All",
        "codes": "return len(object) > length",
        "variables":[
            {
                "name": "length",
                "label": "Maximumn length",
                "entity": null,
                "default": "",
                "is_required": true,
                "prompt": "",
                "type": "number",
                "is_list": false
            }
        ],
        "data": []
    },
    {
        "kind": "Text",
        "name": "TextCommand",
        "description": "Only texts that begin with command and is followed by a list of community users",
        "prompt": "The rest of the text, if separated by commas, will be considered as a list of community users.",
        "platform": "All",
        "codes": "command = command + \" \"\nif object.startswith(command):\n\tif proposal.data: \n\t# when the filter is first run at the pre-filtered stage, the proposal.data is not initialized\n\t\tproposal.data.set(\"command_users\", object[len(command):].strip())\n\treturn True\nelse:\n\treturn False\n",
        "variables":[
            {
                "name": "command",
                "label": "Command",
                "entity": "Text",
                "default": "",
                "is_required": true,
                "prompt": "",
                "type": "string",
                "is_list": false
            }
        ],
        "data": [
            {
                "name": "command_users",
                "label": "Users from the triggering command",
                "prompt": "",
                "entity": "CommunityUser",
                "type": "string",
                "is_list": true

            }
        ]
    },
    {
        "kind": "Text",
        "name": "Contains",
        "description": "Only texts that contain the specified word",
        "prompt": "",
        "platform": "All",
        "codes": "return word in object",
        "variables":[
            {
                "name": "word",
                "label": "Contained word",
                "entity": "Text",
                "default": "",
                "is_required": true,
                "prompt": "",
                "type": "string",
                "is_list": false
            }
        ],
        "data": []
    },
    {
        "kind": "Timestamp",
        "name": "BetweenStartAndEnd",
        "description": "Only timestamps that are between the specified start and end",
        "prompt": "",
        "platform": "All",
        "codes": "return start <= int(object) and int(object) <= end",
        "variables":[
            {
                "name": "start",
                "label": "Starting timestamp",
                "entity": "Timestamp",
                "default": "",
                "is_required": true,
                "prompt": "",
                "type": "timestamp",
                "is_list": false
            },
            {
                "name": "end",
                "label": "Ending timestamp",
                "entity": "Timestamp",
                "default": "",
                "is_required": true,
                "prompt": "",
                "type": "timestamp",
                "is_list": false
            }
        ],
        "data": []
    },
    {
        "kind": "SlackChannel",
        "name": "ChannelNames",
        "description": "Only channels with the specified channel names",
        "prompt": "",
        "platform": "All",
        "codes": "return object in channel_IDs",
        "variables":[
            {
                "name": "channel_IDs",
                "label": "Channel Names",
                "entity": "SlackChannel",
                "default": "",
                "is_required": true,
                "prompt": "",
                "type": "string",
                "is_list": true
            }
        ],
        "data": []
    },
    {
        "kind": "CommunityRole",
        "name": "Roles",
        "description": "Only specified roles",
        "prompt": "",
        "platform": "All",
        "codes": "return object.role_name in role_names",
        "variables":[
            {
                "name": "role_names",
                "label": "Roles",
                "entity": "CommunityRole",
                "default": "",
                "is_required": true,
                "prompt": "",
                "type": "string",
                "is_list": true
            }
        ],
        "data": []
    },
    {
        "kind": "CommunityDoc",
        "name": "CommunityDocs",
        "description": "Only specified documents",
        "prompt": "",
        "platform": "All",
        "codes": "return object.name in community_docs",
        "variables": [
            {
                "name": "community_docs",
                "label": "Community Documents",
                "entity": "CommunityDoc",
                "default": "",
                "is_required": true,
                "prompt": "",
                "type": "string",
                "is_list": true
            }
        ],
        "data": []
    },
    {
        "kind": "Permission",
        "name": "Permissions",
        "description": "Includes any of the specified permissions",
        "prompt": "",
        "platform": "All",
        "codes": "return any(permission.codename in  permission_codenames for permission in object.permissions.all())",
        "variables": [
            {
                "name": "permission_codenames",
                "label": "Included Permissions",
                "entity": "Permission",
                "default": "",
                "is_required": true,
                "prompt": "",
                "type": "string",
                "is_list": true
            }
        ],
        "data": []
    }
]